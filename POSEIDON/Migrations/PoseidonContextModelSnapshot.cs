// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSEIDON.Models;

namespace POSEIDON.Migrations
{
    [DbContext(typeof(PoseidonContext))]
    partial class PoseidonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("POSEIDON.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Activity")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId")
                        .HasDatabaseName("IX_HistoryTable");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ctrUser");

                    b.HasIndex("Activity", "TableId", "Timestamp")
                        .HasDatabaseName("IX_Activity");

                    b.HasIndex("TableId", "OriginId", "Activity")
                        .HasDatabaseName("IX_History");

                    b.ToTable("HISTORY");
                });

            modelBuilder.Entity("POSEIDON.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ROL");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ROOT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("TABLE");
                });

            modelBuilder.Entity("POSEIDON.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Aditional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<string>("Charge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Destine")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InternalPhone")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("UI_KeyUser");

                    b.ToTable("USER");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "ARMADA\\DIAP197",
                            Active = true,
                            Aditional = "74-52-ce-27-66-ca-0a-7c-51-00-8d-7b-e1-78-d0-ae",
                            Authorized = true,
                            Charge = "PROGRAMADOR",
                            Degree = "CP",
                            Destine = "DIAP",
                            FirstName = "DENIS ADRIEL",
                            InternalPhone = "122462",
                            Key = "CHAMBI",
                            LastName = "CHAMBI",
                            Password = "f7-aa-92-99-41-1e-42-6b-06-6b-60-00-17-bb-b3-7d-60-2b-37-d0-91-4d-db-0c-11-70-13-12-59-64-96-88"
                        },
                        new
                        {
                            Id = 2,
                            Account = "ARMADA\\DIAP204",
                            Active = true,
                            Aditional = "cf-17-d4-ee-b2-23-b3-d6-43-aa-4e-d2-e8-53-f4-cf",
                            Authorized = true,
                            Charge = "ENCARGADO SEGUIMIENTO PROFESIONAL",
                            Degree = "SM",
                            Destine = "DIAP",
                            FirstName = "JOSE",
                            InternalPhone = "122462",
                            Key = "SALINAS",
                            LastName = "SALINAS",
                            Password = "9a-ff-21-83-28-cd-22-6c-27-4b-2d-dd-6c-c9-85-29-9a-e0-64-08-e3-7e-af-a2-91-bf-fb-89-72-b4-7c-ac"
                        },
                        new
                        {
                            Id = 3,
                            Account = "ARMADA\\DIAP233",
                            Active = true,
                            Aditional = "d3-7a-d4-f5-f3-a4-f5-a0-8f-43-54-41-83-9b-b3-a2",
                            Authorized = true,
                            Charge = "AUXILIAR SEGUIMIENTO PROFESIONAL",
                            Degree = "CP",
                            Destine = "DIAP",
                            FirstName = "MARIO",
                            InternalPhone = "122462",
                            Key = "TOLABA",
                            LastName = "TOLABA",
                            Password = "20-2d-f1-5b-03-76-7d-41-93-86-be-89-63-22-49-ae-9a-49-19-3c-4e-e0-7a-71-9a-3a-a1-15-a3-e7-2c-49"
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.UserAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Cyte")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperativeSystem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RefreshDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("StillSession")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefreshToken")
                        .IsUnique()
                        .HasDatabaseName("UI_RefreshToken");

                    b.HasIndex("UserId", "Token")
                        .IsUnique()
                        .HasDatabaseName("UI_Token");

                    b.ToTable("USER_ACCESS");
                });

            modelBuilder.Entity("POSEIDON.Models.UserRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId", "RolId")
                        .IsUnique()
                        .HasDatabaseName("UI_UsuarioRol");

                    b.ToTable("USER_ROL");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RolId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            RolId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            RolId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.History", b =>
                {
                    b.HasOne("POSEIDON.Models.Table", null)
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("POSEIDON.Models.UserAccess", b =>
                {
                    b.HasOne("POSEIDON.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("POSEIDON.Models.UserRol", b =>
                {
                    b.HasOne("POSEIDON.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
