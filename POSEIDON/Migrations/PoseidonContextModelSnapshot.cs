// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSEIDON.Models;

namespace POSEIDON.Migrations
{
    [DbContext(typeof(PoseidonContext))]
    partial class PoseidonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("POSEIDON.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Activity")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId")
                        .HasDatabaseName("IX_HistoryTable");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ctrUser");

                    b.HasIndex("Activity", "TableId", "Timestamp")
                        .HasDatabaseName("IX_Activity");

                    b.HasIndex("TableId", "OriginId", "Activity")
                        .HasDatabaseName("IX_History");

                    b.ToTable("HISTORY");
                });

            modelBuilder.Entity("POSEIDON.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ROL");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ROOT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("TABLE");
                });

            modelBuilder.Entity("POSEIDON.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Aditional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<string>("Charge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Destine")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InternalPhone")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("UI_KeyUser");

                    b.ToTable("USER");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "ARMADA\\DIAP197",
                            Active = true,
                            Aditional = "42-04-b1-c7-9a-3f-9c-48-9c-ef-75-04-5a-d0-55-10",
                            Authorized = true,
                            Charge = "PROGRAMADOR",
                            Degree = "CP",
                            Destine = "DIAP",
                            FirstName = "DENIS ADRIEL",
                            InternalPhone = "122462",
                            Key = "CHAMBI",
                            LastName = "CHAMBI",
                            Password = "34-9f-f4-38-5b-c9-40-56-d0-50-80-75-bb-38-e1-8b-ed-27-6d-0b-8d-34-65-38-bf-63-c9-57-9d-de-16-87"
                        },
                        new
                        {
                            Id = 2,
                            Account = "ARMADA\\DIAP204",
                            Active = true,
                            Aditional = "25-ff-57-7d-1d-c4-ba-ca-d2-ac-8d-d5-a5-a0-2a-d3",
                            Authorized = true,
                            Charge = "ENCARGADO SEGUIMIENTO PROFESIONAL",
                            Degree = "SM",
                            Destine = "DIAP",
                            FirstName = "JOSE",
                            InternalPhone = "122462",
                            Key = "SALINAS",
                            LastName = "SALINAS",
                            Password = "5c-73-4d-21-f1-d2-c8-d1-50-50-0b-e3-3a-d8-38-e3-12-b0-1d-d4-3f-4a-45-27-e6-85-13-d8-68-d6-b7-24"
                        },
                        new
                        {
                            Id = 3,
                            Account = "ARMADA\\DIAP233",
                            Active = true,
                            Aditional = "65-d1-9a-4a-7a-0e-c7-aa-54-75-55-ec-cd-a0-dd-cf",
                            Authorized = true,
                            Charge = "AUXILIAR SEGUIMIENTO PROFESIONAL",
                            Degree = "CP",
                            Destine = "DIAP",
                            FirstName = "MARIO",
                            InternalPhone = "122462",
                            Key = "TOLABA",
                            LastName = "TOLABA",
                            Password = "5c-73-4d-21-f1-d2-c8-d1-50-50-0b-e3-3a-d8-38-e3-12-b0-1d-d4-3f-4a-45-27-e6-85-13-d8-68-d6-b7-24"
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.UserAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Cyte")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperativeSystem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RefreshDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("StillSession")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefreshToken")
                        .IsUnique()
                        .HasDatabaseName("UI_RefreshToken");

                    b.HasIndex("UserId", "Token")
                        .IsUnique()
                        .HasDatabaseName("UI_Token");

                    b.ToTable("USER_ACCESS");
                });

            modelBuilder.Entity("POSEIDON.Models.UserRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId", "RolId")
                        .IsUnique()
                        .HasDatabaseName("UI_UsuarioRol");

                    b.ToTable("USER_ROL");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RolId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            RolId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            RolId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.History", b =>
                {
                    b.HasOne("POSEIDON.Models.Table", null)
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("POSEIDON.Models.UserAccess", b =>
                {
                    b.HasOne("POSEIDON.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("POSEIDON.Models.UserRol", b =>
                {
                    b.HasOne("POSEIDON.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
